#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os, sys
from optparse import OptionParser
import json

STORE_FILE = os.path.expanduser("~/.copycat_store")

if STORE_FILE:
    try:
        fp = open(STORE_FILE, "r")
        content = json.loads(fp.read())
        fp.close()
    except IOError:
        content = {}

else:
    print "Error: STORE_FILE is not specified."
    sys.exit(1)



parser = OptionParser(usage="usage: %prog [options] name")
parser.add_option("-s", "--set-value", action="store", type="string", dest="value", help="set the value given to the name.")
parser.add_option("-d", "--delete-value", action="store", type="string", dest="delname", help="delete the name from the copy table.")
parser.add_option("-D", "--deletw-all",  action="store_true",  dest="delall", help="delete all variables of the copy table.")
parser.add_option("-l", "--list", action="store_true", dest="list", help="list all variables in the copy table.")

(options, args) = parser.parse_args()

if not options and not args:
    parser.print_help()
    sys.exit(0)

if len(args) > 1:
    print "There are too many arguments given."

if options.list:
    for name in content.keys():
        print "%s=%s"%(name, content[name])
    sys.exit(0)


if options.value:
    content[args[0]] = options.value
    print "%s:%s has been saved into %s"%(args[0], options.value, STORE_FILE)
elif options.delname:
    del content[options.delname]
else:
    os.system('echo "%s" | pbcopy'%content[args[0]].encode('utf-8'))
    print content[args[0]], "=> pbcopy"
    


fp = open(STORE_FILE, 'w')
fp.write(json.dumps(content))
fp.close()


